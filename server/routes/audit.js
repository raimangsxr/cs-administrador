var express = require('express');
var mongoskin = require('mongoskin');
var config = require('../config');

var id = mongoskin.helper.toObjectID;
var isodate = mongoskin.helper.toISOString;
var router = express.Router();


/* GET auditoria data for active state of all input files */
router.get('/:distrib', function(req, res, next) {
    try{
        var db = mongoskin.db('mongodb://'+config.dbUser+':'+config.dbPass+'@'+config.dbIp+':'+config.dbPort+'/'
            +req.params.distrib+'-database?authSource='+req.params.distrib+'-database', {safe:true});
        db.collection(config.auditCollectionName)
          .find({active: true, $or:[{inputState:{$exists:true}}, {inputFileName:null}] },{})
          .batchSize(100000)
          .sort({creationDate:-1})
          .toArray(function(e, results){
            if (e) return next(e);
            db.close();
            res.send(results);
        });
    } catch (error){
        console.error(error);
        res.status(500).send(error);
    }
});


/* GET auditoria for input file by filename */
router.get('/:distrib/:filename', function(req, res, next) {
    try{
        var db = mongoskin.db('mongodb://'+config.dbUser+':'+config.dbPass+'@'+config.dbIp+':'+config.dbPort+'/'
            +req.params.distrib+'-database?authSource='+req.params.distrib+'-database', {safe:true});
        db.collection(config.auditCollectionName).find({filename: req.params.filename},{}).sort({creationDate:-1}).toArray(function(e, results){
            if (e) return next(e);
            db.close();
            res.send(results);
        });
    } catch (error){
        console.error(error);
        res.status(500).send(error);
    }
});


/* GET auditoria for output files generated by input filename */
router.get('/generatedby/:distrib/:filename', function(req, res, next) {
    try {
        var db = mongoskin.db('mongodb://' + config.dbUser + ':' + config.dbPass + '@' + config.dbIp + ':' + config.dbPort + '/'
            + req.params.distrib + '-database?authSource=' + req.params.distrib + '-database', {safe: true});
        db.collection(config.auditCollectionName).find({
            inputFileName: req.params.filename,
            active: true
        }, {}).sort({creationDate: -1}).toArray(function (e, results) {
            if (e) return next(e);
            db.close();
            res.send(results);
        });
    } catch (error){
        console.error(error);
        res.status(500).send(error);
    }
});


/* GET auditoria for output files generated by input filename */
router.get('/validation/:distrib/:filename', function(req, res, next) {
    try {
        var db = mongoskin.db('mongodb://' + config.dbUser + ':' + config.dbPass + '@' + config.dbIp + ':' + config.dbPort + '/'
          + req.params.distrib + '-database?authSource=' + req.params.distrib + '-database', {safe: true});
        db.collection('validationResult').find({
            inputFileName: req.params.filename
        }, {}).toArray(function (e, results) {
            if (e) return next(e);
            db.close();
            res.send(results);
        });
    } catch (error){
        console.error(error);
        res.status(500).send(error);
    }
});


/* POST audit input file */
router.post('/:distrib', function(req, res, next) {
    try {
        var fileData = req.body;
        var db = mongoskin.db('mongodb://' + config.dbUser + ':' + config.dbPass + '@' + config.dbIp + ':' + config.dbPort + '/'
            + req.params.distrib + '-database?authSource=' + req.params.distrib + '-database', {safe: true});
        db.collection(config.auditCollectionName).update({_id: id(fileData._id)}, {$set: {active: false}}, function (error) {
            if (error) return next(error);
            delete fileData._id;
            fileData.creationDate = new Date();
            db.collection(config.auditCollectionName).insert(fileData, function (error) {
                if (error) return next(error);
                db.close();
                res.status(200).json({"result": "ok"});
            });
        });
    } catch (error){
        console.error(error);
        res.status(500).send(error);
    }
});


router.put('/:distrib/:id', function(req, res, next) {
    try {
        var fileData = req.body;
        delete fileData._id;
        fileData.creationDate = new Date(fileData.creationDate);
        var db = mongoskin.db('mongodb://' + config.dbUser + ':' + config.dbPass + '@' + config.dbIp + ':' + config.dbPort + '/'
          + req.params.distrib + '-database?authSource=' + req.params.distrib + '-database', {safe: true});
        db.collection(config.auditCollectionName).update({_id: id(req.params.id)}, fileData, function (error) {
            if (error) return next(error);
            db.close();
            res.status(200).json({"result": "ok"});
        });
    } catch (error){
        console.error(error);
        res.status(500).send(error);
    }
});

module.exports = router;
